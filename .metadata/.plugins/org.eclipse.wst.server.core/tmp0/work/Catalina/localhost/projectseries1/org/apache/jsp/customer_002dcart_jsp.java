/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-04-04 20:57:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Random;
import dao.CartDao;
import model.Cart;
import model.WishList;
import dao.WishListDao;
import dao.ProductDao;
import model.Product;
import java.util.List;
import model.Customer;

public final class customer_002dcart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Product");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Customer");
    _jspx_imports_classes.add("dao.CartDao");
    _jspx_imports_classes.add("java.util.Random");
    _jspx_imports_classes.add("model.Cart");
    _jspx_imports_classes.add("dao.WishListDao");
    _jspx_imports_classes.add("dao.ProductDao");
    _jspx_imports_classes.add("model.WishList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

 	Random randomGenerator = new Random();
	int randomInt = randomGenerator.nextInt(1000000);
 
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("Author: W3layouts\r\n");
      out.write("Author URL: http://w3layouts.com\r\n");
      out.write("License: Creative Commons Attribution 3.0 Unported\r\n");
      out.write("License URL: http://creativecommons.org/licenses/by/3.0/\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"zxx\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<title>Bootie Ecommerce Bootstrap Responsive Web Template | Home\r\n");
      out.write("	:: W3layouts</title>\r\n");
      out.write("<!-- Meta tag Keywords -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<meta name=\"keywords\"\r\n");
      out.write("	content=\"Bootie Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template, Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design\" />\r\n");
      out.write("<script>\r\n");
      out.write("	addEventListener(\"load\", function() {\r\n");
      out.write("		setTimeout(hideURLbar, 0);\r\n");
      out.write("	}, false);\r\n");
      out.write("\r\n");
      out.write("	function hideURLbar() {\r\n");
      out.write("		window.scrollTo(0, 1);\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- //Meta tag Keywords -->\r\n");
      out.write("\r\n");
      out.write("<!-- Custom-Files -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("<!-- Bootstrap-Core-CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"all\" />\r\n");
      out.write("<!-- Style-CSS -->\r\n");
      out.write("<!-- font-awesome-icons -->\r\n");
      out.write("<link href=\"css/font-awesome.css\" rel=\"stylesheet\">\r\n");
      out.write("<!-- //font-awesome-icons -->\r\n");
      out.write("<!-- /Fonts -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"//fonts.googleapis.com/css?family=Lato:100,100i,300,300i,400,400i,700\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"//fonts.googleapis.com/css?family=Source+Sans+Pro:200,200i,300,300i,400,400i,600,600i,700,700i,900\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<!-- //Fonts -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	Customer c = null;
	if (session.getAttribute("data") != null) {
		c = (Customer) session.getAttribute("data");
	} else {
		response.sendRedirect("customer-login.jsp");
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- mian-content -->\r\n");
      out.write("	<div class=\"main-banner inner\" id=\"home\">\r\n");
      out.write("		<!-- header -->\r\n");
      out.write("		<header class=\"header\">\r\n");
      out.write("			<div class=\"container-fluid px-lg-5\">\r\n");
      out.write("				<!-- nav -->\r\n");
      out.write("				<nav class=\"py-4\">\r\n");
      out.write("					<div id=\"logo\">\r\n");
      out.write("						<h1>\r\n");
      out.write("							<a href=\"index.jsp\"><span class=\"fa fa-bold\"\r\n");
      out.write("								aria-hidden=\"true\"></span>ootie</a>\r\n");
      out.write("						</h1>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<label for=\"drop\" class=\"toggle\">Menu</label> <input\r\n");
      out.write("						type=\"checkbox\" id=\"drop\" />\r\n");
      out.write("					<ul class=\"menu mt-2\">\r\n");
      out.write("						<li class=\"active\"><a href=\"customer-home.jsp\">Home</a></li>\r\n");
      out.write("						<li>\r\n");
      out.write("							<!-- First Tier Drop Down --> <label for=\"drop-2\" class=\"toggle\">Drop\r\n");
      out.write("								Down <span class=\"fa fa-angle-down\" aria-hidden=\"true\"></span>\r\n");
      out.write("						</label> <a href=\"#\">Product <span class=\"fa fa-angle-down\"\r\n");
      out.write("								aria-hidden=\"true\"></span></a> <input type=\"checkbox\" id=\"drop-2\" />\r\n");
      out.write("							<ul>\r\n");
      out.write("								");

								List<Cart> list2 = CartDao.getCartByCusId(c.getId());
								
      out.write("\r\n");
      out.write("								<li><a href=\"customer-cart.jsp\">Cart(");
      out.print(list2.size());
      out.write(")\r\n");
      out.write("								</a></li>\r\n");
      out.write("\r\n");
      out.write("								");

								List<WishList> list1 = WishListDao.getWishListByCusId(c.getId());
								
      out.write("\r\n");
      out.write("								<li><a href=\"customer-wishlist.jsp\">WishList(");
      out.print(list1.size());
      out.write(")\r\n");
      out.write("								</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>\r\n");
      out.write("							<!-- First Tier Drop Down --> <label for=\"drop-2\" class=\"toggle\">Drop\r\n");
      out.write("								Down <span class=\"fa fa-angle-down\" aria-hidden=\"true\"></span>\r\n");
      out.write("						</label> <a href=\"#\">");
      out.print(c.getName());
      out.write("<span class=\"fa fa-angle-down\"\r\n");
      out.write("								aria-hidden=\"true\"></span></a> <input type=\"checkbox\" id=\"drop-2\" />\r\n");
      out.write("							<ul>\r\n");
      out.write("								<li><a href=\"customer-profile.jsp\">Profile</a></li>\r\n");
      out.write("								<li><a href=\"customer-change-password.jsp\">Change\r\n");
      out.write("										Password</a></li>\r\n");
      out.write("								<li><a href=\"customer-logout.jsp\">Logout</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</nav>\r\n");
      out.write("				<!-- //nav -->\r\n");
      out.write("			</div>\r\n");
      out.write("		</header>\r\n");
      out.write("		<!-- //header -->\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<table class=\"table\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th scope=\"col\">Product Name</th>\r\n");
      out.write("					<th scope=\"col\">Product Price</th>\r\n");
      out.write("					<th scope=\"col\">Product Quantity</th>\r\n");
      out.write("					<th scope=\"col\">Total</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody>\r\n");
      out.write("				");

				List<Cart> list = CartDao.getCartByCusId(c.getId());
				
      out.write("\r\n");
      out.write("				");

				int net_price = 0;
				
      out.write("\r\n");
      out.write("				");

				for (Cart c1 : list) {
				
      out.write("\r\n");
      out.write("				");

				net_price = net_price + c1.getTotal();
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th scope=\"row\">");
      out.print(c1.getPname());
      out.write("</th>\r\n");
      out.write("					<td>");
      out.print(c1.getPprice());
      out.write("</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<form action=\"CartController\" method=\"post\">\r\n");
      out.write("							<input type=\"hidden\" name=\"cid\" value=\"");
      out.print(c1.getCid());
      out.write("\">\r\n");
      out.write("							<input type=\"number\" min=\"1\" max=\"10\" value=\"");
      out.print(c1.getPqty());
      out.write("\"\r\n");
      out.write("								name=\"pqty\" onchange=\"this.form.submit();\">\r\n");
      out.write("						</form>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>");
      out.print(c1.getTotal());
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("				<th></th>\r\n");
      out.write("				<td></td>\r\n");
      out.write("				<td></td>\r\n");
      out.write("				<td>Net Price: ");
      out.print(net_price );
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		<form method=\"post\" action=\"pgRedirect.jsp\">\r\n");
      out.write("		<table border=\"1\">\r\n");
      out.write("			<tbody>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>S.No</th>\r\n");
      out.write("					<th>Label</th>\r\n");
      out.write("					<th>Value</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>1</td>\r\n");
      out.write("					<td><label>ORDER_ID::*</label></td>\r\n");
      out.write("					<td><input id=\"ORDER_ID\" tabindex=\"1\" maxlength=\"20\" size=\"20\"\r\n");
      out.write("						name=\"ORDER_ID\" autocomplete=\"off\"\r\n");
      out.write("						value=\"ORDS_");
      out.print( randomInt );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>2</td>\r\n");
      out.write("					<td><label>CUSTID ::*</label></td>\r\n");
      out.write("					<td><input id=\"CUST_ID\" tabindex=\"2\" maxlength=\"30\" size=\"12\" name=\"CUST_ID\" autocomplete=\"off\" value=\"CUST001\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>3</td>\r\n");
      out.write("					<td><label>INDUSTRY_TYPE_ID ::*</label></td>\r\n");
      out.write("					<td><input id=\"INDUSTRY_TYPE_ID\" tabindex=\"4\" maxlength=\"12\" size=\"12\" name=\"INDUSTRY_TYPE_ID\" autocomplete=\"off\" value=\"Retail\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>4</td>\r\n");
      out.write("					<td><label>Channel ::*</label></td>\r\n");
      out.write("					<td><input id=\"CHANNEL_ID\" tabindex=\"4\" maxlength=\"12\"\r\n");
      out.write("						size=\"12\" name=\"CHANNEL_ID\" autocomplete=\"off\" value=\"WEB\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>5</td>\r\n");
      out.write("					<td><label>txnAmount*</label></td>\r\n");
      out.write("					<td><input title=\"TXN_AMOUNT\" tabindex=\"10\"\r\n");
      out.write("						type=\"text\" name=\"TXN_AMOUNT\"\r\n");
      out.write("						value=\"");
      out.print(net_price);
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td></td>\r\n");
      out.write("					<td></td>\r\n");
      out.write("					<td><input value=\"CheckOut\" type=\"submit\"	onclick=\"\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		* - Mandatory Fields\r\n");
      out.write("	</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
